{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"ngx-bootstrap/dropdown\";\nfunction SelectComponent_ul_5_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 7);\n    i0.ɵɵlistener(\"click\", function SelectComponent_ul_5_li_1_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.select(item_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r3.label);\n  }\n}\nfunction SelectComponent_ul_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 5);\n    i0.ɵɵtemplate(1, SelectComponent_ul_5_li_1_Template, 2, 1, \"li\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"width\", \"100%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.options);\n  }\n}\nexport class SelectComponent {\n  constructor() {\n    this.placeholder = 'Chose auto';\n    this.isDisabled = false;\n  }\n  select(item) {\n    this.onChange(item.value);\n    this.viewValue = item.label;\n  }\n  writeValue(value) {\n    this.viewValue = this.options.find(item => item.value === value)?.label;\n    //console.log(value)\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.isDisabled = isDisabled;\n  }\n}\nSelectComponent.ɵfac = function SelectComponent_Factory(t) {\n  return new (t || SelectComponent)();\n};\nSelectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SelectComponent,\n  selectors: [[\"app-select\"]],\n  inputs: {\n    options: \"options\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    multi: true,\n    useExisting: forwardRef(() => SelectComponent)\n  }])],\n  decls: 6,\n  vars: 3,\n  consts: [[\"dropdown\", \"\", 1, \"btn-group\", \"w-100\", \"mb-5\", 3, \"isDisabled\"], [\"id\", \"button-basic\", \"dropdownToggle\", \"\", \"type\", \"button\", \"aria-controls\", \"dropdown-basic\", 1, \"btn\", \"dropdown-toggle\", 3, \"ngClass\"], [\"btnSelect\", \"\"], [1, \"caret\"], [\"id\", \"dropdown-basic\", \"class\", \"dropdown-menu\", \"role\", \"menu\", \"aria-labelledby\", \"button-basic\", 3, \"width\", 4, \"dropdownMenu\"], [\"id\", \"dropdown-basic\", \"role\", \"menu\", \"aria-labelledby\", \"button-basic\", 1, \"dropdown-menu\"], [\"role\", \"menuitem\", \"class\", \"pointer\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"menuitem\", 1, \"pointer\", 3, \"click\"]],\n  template: function SelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1, 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelement(4, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, SelectComponent_ul_5_Template, 2, 3, \"ul\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"isDisabled\", ctx.isDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.isDisabled ? \"btn-danger\" : \"btn-success\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.viewValue ? ctx.viewValue : ctx.placeholder, \" \");\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i2.BsDropdownMenuDirective, i2.BsDropdownToggleDirective, i2.BsDropdownDirective],\n  styles: [\".pointer[_ngcontent-%COMP%]:hover{\\r\\n  cursor: pointer;\\r\\n  background-color: #5598ff;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VsZWN0L3NlbGVjdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5wb2ludGVyOmhvdmVye1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU5OGZmO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmBA,UAAU,QAAc,eAAe;AAC1D,SAA8BC,iBAAiB,QAAO,gBAAgB;;;;;;;ICMlEC,6BAAwF;IAAvCA;MAAA;MAAA;MAAA;MAAA,OAASA,qCAAY;IAAA,EAAC;IAAiBA,YAAc;IAAAA,iBAAK;;;;IAAnBA,eAAc;IAAdA,mCAAc;;;;;IAFxGA,6BACsE;IACpEA,mEAA2G;IAC7GA,iBAAK;;;;IAF0CA,+BAAsB;IAC9BA,eAAU;IAAVA,wCAAU;;;ADSnD,OAAM,MAAOC,eAAe;EAQ1BC;IANO,gBAAW,GAAG,YAAY;IAK1B,eAAU,GAAG,KAAK;EACT;EAEhBC,MAAM,CAACC,IAAY;IACjB,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACE,KAAK,CAAC;IACzB,IAAI,CAACC,SAAS,GAAGH,IAAI,CAACI,KAAK;EAC7B;EACAC,UAAU,CAACH,KAAa;IACtB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACG,OAAO,CAACC,IAAI,CAAEP,IAAI,IAAGA,IAAI,CAACE,KAAK,KAAGA,KAAK,CAAC,EAAEE,KAAK;IACrE;EACF;;EAEAI,gBAAgB,CAACC,EAAwB;IACvC,IAAI,CAACR,QAAQ,GAAGQ,EAAE;EACpB;EAEAC,iBAAiB,CAACD,EAAY;IAC5B,IAAI,CAACE,SAAS,GAAGF,EAAE;EACrB;EAEAG,gBAAgB,CAAEC,UAAmB;IACnC,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;;AA7BWhB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAiB;EAAAC;IAAAT;EAAA;EAAAU,iCAPhB,CAAC;IACTC,OAAO,EAAEtB,iBAAiB;IAC1BuB,KAAK,EAAE,IAAI;IACXC,WAAW,EAAEzB,UAAU,CAAC,MAAIG,eAAe;GAC5C,CAAC;EAAAuB;EAAAC;EAAAC;EAAAC;IAAA;MCbJ3B,8BAAsE;MAGlEA,YAAwC;MAAAA,0BAA2B;MACrEA,iBAAS;MACTA,8DAGK;MACPA,iBAAM;;;MATqCA,2CAAyB;MAE3BA,eAAqD;MAArDA,uEAAqD;MAC1FA,eAAwC;MAAxCA,gFAAwC","names":["forwardRef","NG_VALUE_ACCESSOR","i0","SelectComponent","constructor","select","item","onChange","value","viewValue","label","writeValue","options","find","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","selectors","inputs","features","provide","multi","useExisting","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\AngularForms\\src\\app\\select\\select.component.ts","E:\\AngularForms\\src\\app\\select\\select.component.html"],"sourcesContent":["import {Component, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {Option} from \"../forms/forms.component\";\n\nexport type OptionsValue = '';\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.css'],\n  providers:[{\n    provide: NG_VALUE_ACCESSOR,\n    multi: true,\n    useExisting: forwardRef(()=>SelectComponent)\n  }]\n\n})\nexport class SelectComponent implements ControlValueAccessor {\n  @Input()options!: Option [];\n  public placeholder = 'Chose auto';\n  public viewValue: string | undefined;\n  public some!: string;\n  private onChange!: (value: string)=>void;\n  private onTouched!: ()=>void;\n  public isDisabled = false;\n  constructor() { }\n\n  select(item: Option) {\n    this.onChange(item.value);\n    this.viewValue = item.label;\n  }\n  writeValue(value: string): void{\n    this.viewValue = this.options.find((item)=>item.value===value)?.label;\n    //console.log(value)\n  }\n\n  registerOnChange(fn:(value: string)=>void):void{\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: ()=>void):void{\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean){\n    this.isDisabled = isDisabled;\n  }\n}\n","<div class=\"btn-group w-100 mb-5\" dropdown [isDisabled]=\"isDisabled\" >\n  <button id=\"button-basic\" dropdownToggle type=\"button\" class=\"btn dropdown-toggle\"\n          aria-controls=\"dropdown-basic\" [ngClass]=\"isDisabled ? 'btn-danger' : 'btn-success'\" #btnSelect>\n    {{viewValue ? viewValue : placeholder}} <span class=\"caret\"></span>\n  </button>\n  <ul id=\"dropdown-basic\" *dropdownMenu class=\"dropdown-menu\"\n      role=\"menu\" aria-labelledby=\"button-basic\" [style.width]=\"'100%'\">\n    <li role=\"menuitem\" *ngFor=\"let item of options\" (click)=\"select(item)\" class=\"pointer\">{{item.label}}</li>\n  </ul>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}