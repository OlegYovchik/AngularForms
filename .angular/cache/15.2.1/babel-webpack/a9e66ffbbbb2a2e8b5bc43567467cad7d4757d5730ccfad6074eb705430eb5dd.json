{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FormsComponent {\n  constructor(http) {\n    this.http = http;\n    this.options = [{\n      label: 'BMW',\n      value: '123'\n    }, {\n      label: 'Alfa-Romeo',\n      value: '124'\n    }, {\n      label: 'Opel',\n      value: '125'\n    }];\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      selectName: new FormControl(this.options[2].value, Validators.required)\n    });\n    setTimeout(() => this.form.get('selectName')?.setValue(this.options[0].value), 1500);\n    setTimeout(() => this.form.get('selectName')?.disable(), 1500);\n    setTimeout(() => this.form.get('selectName')?.enable(), 3000);\n    //testing CodeWar\n    // @ts-ignore\n    function minValue(values) {\n      return values.sort().filter((item, i) => item !== values[i + 1]);\n    }\n    console.log(minValue([1, 9, 6, 4, 8, 3, 6, 1]));\n  }\n  fetchData() {\n    let params = new HttpParams();\n    params = params.append('limit', '5');\n    this.http.get('https://dummyjson.com/products', {\n      params\n    }).subscribe();\n  }\n}\nFormsComponent.ɵfac = function FormsComponent_Factory(t) {\n  return new (t || FormsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nFormsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormsComponent,\n  selectors: [[\"app-forms\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"form-group\", \"p-2\", \"d-flex\", \"flex-column\", \"w-100\", 3, \"formGroup\"], [\"formControlName\", \"selectName\", 3, \"options\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"]],\n  template: function FormsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-select\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function FormsComponent_Template_button_click_2_listener() {\n        return ctx.fetchData();\n      });\n      i0.ɵɵtext(3, \"Fetch Data\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"options\", ctx.options);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAE7D,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAYnE,OAAM,MAAOC,cAAc;EAQzBC,YAAqBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALlB,YAAO,GAAa,CACzB;MAACC,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAK,CAAC,EAC5B;MAACD,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAK,CAAC,EACnC;MAACD,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAK,CAAC,CAC9B;EACwC;EACzCC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAIR,SAAS,CAAC;MACxBS,UAAU,EAAE,IAAIV,WAAW,CAAC,IAAI,CAACW,OAAO,CAAC,CAAC,CAAC,CAACJ,KAAK,EAAEL,UAAU,CAACU,QAAQ;KACvE,CAAC;IACFC,UAAU,CAAC,MAAI,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,YAAY,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,EAAC,IAAI,CAAC;IACjFM,UAAU,CAAC,MAAI,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,YAAY,CAAC,EAAEE,OAAO,EAAE,EAAC,IAAI,CAAC;IAC3DH,UAAU,CAAC,MAAI,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,YAAY,CAAC,EAAEG,MAAM,EAAE,EAAC,IAAI,CAAC;IAC1D;IACA;IACA,SAASC,QAAQ,CAACC,MAAM;MACtB,OAAOA,MAAM,CAACC,IAAI,EAAE,CAACC,MAAM,CAAC,CAACC,IAAY,EAAEC,CAAS,KAAGD,IAAI,KAAGH,MAAM,CAACI,CAAC,GAAC,CAAC,CAAC,CAAC;IAC5E;IACAC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;EAC1C;EACAQ,SAAS;IACP,IAAIC,MAAM,GAAG,IAAI5B,UAAU,EAAE;IAC7B4B,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC;IACpC,IAAI,CAACvB,IAAI,CAACS,GAAG,CAAS,gCAAgC,EAAC;MAACa;IAAM,CAAC,CAAC,CAC7DE,SAAS,EAAE;EAChB;;AA5BW1B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd3BC,8BAAwE;MACtEA,gCAA0E;MAC1EA,iCAAoE;MAAtBA;QAAA,OAASC,eAAW;MAAA,EAAC;MAACD,0BAAU;MAAAA,iBAAS;;;MAFpFA,oCAAkB;MACTA,eAAmB;MAAnBA,qCAAmB","names":["HttpParams","FormControl","FormGroup","Validators","FormsComponent","constructor","http","label","value","ngOnInit","form","selectName","options","required","setTimeout","get","setValue","disable","enable","minValue","values","sort","filter","item","i","console","log","fetchData","params","append","subscribe","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["E:\\AngularForms\\src\\app\\forms\\forms.component.ts","E:\\AngularForms\\src\\app\\forms\\forms.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Post } from '../post/post.page';\n\nexport type Option = {\n  label: string\n  value: string\n}\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.scss'],\n})\nexport class FormsComponent implements OnInit {\n  public form!: FormGroup\n\n  public options: Option[] = [\n    {label: 'BMW', value: '123'},\n    {label: 'Alfa-Romeo', value: '124'},\n    {label: 'Opel', value: '125'}\n  ]\n  constructor( private http: HttpClient) { }\n  ngOnInit() {\n    this.form = new FormGroup({\n      selectName: new FormControl(this.options[2].value, Validators.required)\n    })\n    setTimeout(()=>this.form.get('selectName')?.setValue(this.options[0].value),1500);\n    setTimeout(()=>this.form.get('selectName')?.disable(),1500);\n    setTimeout(()=>this.form.get('selectName')?.enable(),3000);\n    //testing CodeWar\n    // @ts-ignore\n    function minValue(values){\n      return values.sort().filter((item: number, i: number)=>item!==values[i+1])\n    }\n    console.log(minValue([1,9,6,4,8,3,6,1]));\n  }\n  fetchData(){\n    let params = new HttpParams();\n    params = params.append('limit', '5');\n    this.http.get<Post[]>('https://dummyjson.com/products',{params})\n      .subscribe()\n  }\n}\n","<div [formGroup]=\"form\" class=\"form-group p-2 d-flex flex-column w-100\">\n  <app-select [options]=\"options\" formControlName=\"selectName\"></app-select>\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"fetchData()\">Fetch Data</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}